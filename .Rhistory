rem_pop <- c()
imm_pop <- c()
for (i in 1:length(country_samp)){
if (!is.null(which(econ_ind$Country.Name == country_samp[i]))){
vals <- which(econ_ind$Country.Name == country_samp[i])
r_pop <- which(country_data$Country == country_samp[i])
if(length(vals)>0){
indx[count] <- which(econ_ind$Country.Name == country_samp[i])
country[count] <- country_samp[i]
rem_pop[count] <- country_data$Remaining.population[r_pop]
imm_pop[count] <- country_data$Emmigrated.population[r_pop]
count <- count+1
}
}
}
growth_rate <- econ_ind$GDP.growth[indx]
inflation <- econ_ind$Inflation[indx]
unemp <- econ_ind$unemployment.rate[indx]
crime <- econ_ind$homicides[indx]
popn <- data.frame(country=country,
immigrated_pop=imm_pop,
remaining_pop=rem_pop,
gdp_growth_rate=growth_rate,
inflation=inflation,
unemployment=unemp,
crime_rate=crime)
popn
#write.csv(popn,"C:/Users/Dell/Desktop/HW/GLM/Project/population.csv", row.names = FALSE)
#immigration data
country_data <- read.csv("Popn_dataset.csv")
#econ indicators data
econ_ind <- read.csv("gdpu.csv")
#random sampling
set.seed(1223)
country_samp <- sample(country_data$Country, 50)
indx <- c()
country <- c()
count <- 1
#immigrated and remaining population
rem_pop <- c()
imm_pop <- c()
for (i in 1:length(country_samp)){
if (!is.null(which(econ_ind$Country.Name == country_samp[i]))){
vals <- which(econ_ind$Country.Name == country_samp[i])
r_pop <- which(country_data$Country == country_samp[i])
if(length(vals)>0){
indx[count] <- which(econ_ind$Country.Name == country_samp[i])
country[count] <- country_samp[i]
rem_pop[count] <- country_data$Remaining.population[r_pop]
imm_pop[count] <- country_data$Emmigrated.population[r_pop]
count <- count+1
}
}
}
growth_rate <- econ_ind$GDP.growth[indx]
inflation <- econ_ind$Inflation[indx]
unemp <- econ_ind$unemployment.rate[indx]
crime <- econ_ind$homicides[indx]
popn <- data.frame(country=country,
immigrated_pop=imm_pop,
remaining_pop=rem_pop,
gdp_growth_rate=growth_rate,
inflation=inflation,
unemployment=unemp,
crime_rate=crime)
popn
#write.csv(popn,"C:/Users/Dell/Desktop/HW/GLM/Project/population.csv", row.names = FALSE)
#immigration data
country_data <- read.csv("Popn_dataset.csv")
#econ indicators data
econ_ind <- read.csv("gdpu.csv")
#random sampling
#set.seed(1223)
country_samp <- sample(country_data$Country, 50)
indx <- c()
country <- c()
count <- 1
#immigrated and remaining population
rem_pop <- c()
imm_pop <- c()
for (i in 1:length(country_samp)){
if (!is.null(which(econ_ind$Country.Name == country_samp[i]))){
vals <- which(econ_ind$Country.Name == country_samp[i])
r_pop <- which(country_data$Country == country_samp[i])
if(length(vals)>0){
indx[count] <- which(econ_ind$Country.Name == country_samp[i])
country[count] <- country_samp[i]
rem_pop[count] <- country_data$Remaining.population[r_pop]
imm_pop[count] <- country_data$Emmigrated.population[r_pop]
count <- count+1
}
}
}
growth_rate <- econ_ind$GDP.growth[indx]
inflation <- econ_ind$Inflation[indx]
unemp <- econ_ind$unemployment.rate[indx]
crime <- econ_ind$homicides[indx]
popn <- data.frame(country=country,
immigrated_pop=imm_pop,
remaining_pop=rem_pop,
gdp_growth_rate=growth_rate,
inflation=inflation,
unemployment=unemp,
crime_rate=crime)
popn
#write.csv(popn,"C:/Users/Dell/Desktop/HW/GLM/Project/population.csv", row.names = FALSE)
#immigration data
country_data <- read.csv("Popn_dataset.csv")
#econ indicators data
econ_ind <- read.csv("gdpu.csv")
#random sampling
#set.seed(1223)
country_samp <- sample(country_data$Country, 50)
indx <- c()
country <- c()
count <- 1
#immigrated and remaining population
rem_pop <- c()
imm_pop <- c()
for (i in 1:length(country_samp)){
if (!is.null(which(econ_ind$Country.Name == country_samp[i]))){
vals <- which(econ_ind$Country.Name == country_samp[i])
r_pop <- which(country_data$Country == country_samp[i])
if(length(vals)>0){
indx[count] <- which(econ_ind$Country.Name == country_samp[i])
country[count] <- country_samp[i]
rem_pop[count] <- country_data$Remaining.population[r_pop]
imm_pop[count] <- country_data$Emmigrated.population[r_pop]
count <- count+1
}
}
}
growth_rate <- econ_ind$GDP.growth[indx]
inflation <- econ_ind$Inflation[indx]
unemp <- econ_ind$unemployment.rate[indx]
crime <- econ_ind$homicides[indx]
popn <- data.frame(country=country,
immigrated_pop=imm_pop,
remaining_pop=rem_pop,
gdp_growth_rate=growth_rate,
inflation=inflation,
unemployment=unemp,
crime_rate=crime)
popn
#write.csv(popn,"C:/Users/Dell/Desktop/HW/GLM/Project/population.csv", row.names = FALSE)
#immigration data
country_data <- read.csv("Popn_dataset.csv")
#econ indicators data
econ_ind <- read.csv("gdpu.csv")
#random sampling
set.seed(131)
country_samp <- sample(country_data$Country, 50)
indx <- c()
country <- c()
count <- 1
#immigrated and remaining population
rem_pop <- c()
imm_pop <- c()
for (i in 1:length(country_samp)){
if (!is.null(which(econ_ind$Country.Name == country_samp[i]))){
vals <- which(econ_ind$Country.Name == country_samp[i])
r_pop <- which(country_data$Country == country_samp[i])
if(length(vals)>0){
indx[count] <- which(econ_ind$Country.Name == country_samp[i])
country[count] <- country_samp[i]
rem_pop[count] <- country_data$Remaining.population[r_pop]
imm_pop[count] <- country_data$Emmigrated.population[r_pop]
count <- count+1
}
}
}
growth_rate <- econ_ind$GDP.growth[indx]
inflation <- econ_ind$Inflation[indx]
unemp <- econ_ind$unemployment.rate[indx]
crime <- econ_ind$homicides[indx]
popn <- data.frame(country=country,
immigrated_pop=imm_pop,
remaining_pop=rem_pop,
gdp_growth_rate=growth_rate,
inflation=inflation,
unemployment=unemp,
crime_rate=crime)
popn
#write.csv(popn,"C:/Users/Dell/Desktop/HW/GLM/Project/population.csv", row.names = FALSE)
#immigration data
country_data <- read.csv("Popn_dataset.csv")
#econ indicators data
econ_ind <- read.csv("gdpu.csv")
#random sampling
set.seed(132)
country_samp <- sample(country_data$Country, 50)
indx <- c()
country <- c()
count <- 1
#immigrated and remaining population
rem_pop <- c()
imm_pop <- c()
for (i in 1:length(country_samp)){
if (!is.null(which(econ_ind$Country.Name == country_samp[i]))){
vals <- which(econ_ind$Country.Name == country_samp[i])
r_pop <- which(country_data$Country == country_samp[i])
if(length(vals)>0){
indx[count] <- which(econ_ind$Country.Name == country_samp[i])
country[count] <- country_samp[i]
rem_pop[count] <- country_data$Remaining.population[r_pop]
imm_pop[count] <- country_data$Emmigrated.population[r_pop]
count <- count+1
}
}
}
growth_rate <- econ_ind$GDP.growth[indx]
inflation <- econ_ind$Inflation[indx]
unemp <- econ_ind$unemployment.rate[indx]
crime <- econ_ind$homicides[indx]
popn <- data.frame(country=country,
immigrated_pop=imm_pop,
remaining_pop=rem_pop,
gdp_growth_rate=growth_rate,
inflation=inflation,
unemployment=unemp,
crime_rate=crime)
popn
#write.csv(popn,"C:/Users/Dell/Desktop/HW/GLM/Project/population.csv", row.names = FALSE)
#immigration data
country_data <- read.csv("Popn_dataset.csv")
#econ indicators data
econ_ind <- read.csv("gdpu.csv")
#random sampling
set.seed(133)
country_samp <- sample(country_data$Country, 50)
indx <- c()
country <- c()
count <- 1
#immigrated and remaining population
rem_pop <- c()
imm_pop <- c()
for (i in 1:length(country_samp)){
if (!is.null(which(econ_ind$Country.Name == country_samp[i]))){
vals <- which(econ_ind$Country.Name == country_samp[i])
r_pop <- which(country_data$Country == country_samp[i])
if(length(vals)>0){
indx[count] <- which(econ_ind$Country.Name == country_samp[i])
country[count] <- country_samp[i]
rem_pop[count] <- country_data$Remaining.population[r_pop]
imm_pop[count] <- country_data$Emmigrated.population[r_pop]
count <- count+1
}
}
}
growth_rate <- econ_ind$GDP.growth[indx]
inflation <- econ_ind$Inflation[indx]
unemp <- econ_ind$unemployment.rate[indx]
crime <- econ_ind$homicides[indx]
popn <- data.frame(country=country,
immigrated_pop=imm_pop,
remaining_pop=rem_pop,
gdp_growth_rate=growth_rate,
inflation=inflation,
unemployment=unemp,
crime_rate=crime)
popn
#write.csv(popn,"C:/Users/Dell/Desktop/HW/GLM/Project/population.csv", row.names = FALSE)
#immigration data
country_data <- read.csv("Popn_dataset.csv")
#econ indicators data
econ_ind <- read.csv("gdpu.csv")
#random sampling
set.seed(133)
country_samp <- sample(country_data$Country, 50)
indx <- c()
country <- c()
count <- 1
#immigrated and remaining population
rem_pop <- c()
imm_pop <- c()
for (i in 1:length(country_samp)){
if (!is.null(which(econ_ind$Country.Name == country_samp[i]))){
vals <- which(econ_ind$Country.Name == country_samp[i])
r_pop <- which(country_data$Country == country_samp[i])
if(length(vals)>0){
indx[count] <- which(econ_ind$Country.Name == country_samp[i])
country[count] <- country_samp[i]
rem_pop[count] <- country_data$Remaining.population[r_pop]
imm_pop[count] <- country_data$Emmigrated.population[r_pop]
count <- count+1
}
}
}
growth_rate <- econ_ind$GDP.growth[indx]
inflation <- econ_ind$Inflation[indx]
unemp <- econ_ind$unemployment.rate[indx]
crime <- econ_ind$homicides[indx]
popn <- data.frame(country=country,
immigrated_pop=imm_pop,
remaining_pop=rem_pop,
gdp_growth_rate=growth_rate,
inflation=inflation,
unemployment=unemp,
crime_rate=crime)
popn
#write.csv(popn,"C:/Users/Dell/Desktop/HW/GLM/Project/population.csv", row.names = FALSE)
#immigration data
country_data <- read.csv("Popn_dataset.csv")
#econ indicators data
econ_ind <- read.csv("gdpu.csv")
#random sampling
set.seed(13223)
country_samp <- sample(country_data$Country, 50)
indx <- c()
country <- c()
count <- 1
#immigrated and remaining population
rem_pop <- c()
imm_pop <- c()
for (i in 1:length(country_samp)){
if (!is.null(which(econ_ind$Country.Name == country_samp[i]))){
vals <- which(econ_ind$Country.Name == country_samp[i])
r_pop <- which(country_data$Country == country_samp[i])
if(length(vals)>0){
indx[count] <- which(econ_ind$Country.Name == country_samp[i])
country[count] <- country_samp[i]
rem_pop[count] <- country_data$Remaining.population[r_pop]
imm_pop[count] <- country_data$Emmigrated.population[r_pop]
count <- count+1
}
}
}
growth_rate <- econ_ind$GDP.growth[indx]
inflation <- econ_ind$Inflation[indx]
unemp <- econ_ind$unemployment.rate[indx]
crime <- econ_ind$homicides[indx]
popn <- data.frame(country=country,
immigrated_pop=imm_pop,
remaining_pop=rem_pop,
gdp_growth_rate=growth_rate,
inflation=inflation,
unemployment=unemp,
crime_rate=crime)
popn
#write.csv(popn,"C:/Users/Dell/Desktop/HW/GLM/Project/population.csv", row.names = FALSE)
#immigration data
country_data <- read.csv("Popn_dataset.csv")
#econ indicators data
econ_ind <- read.csv("gdpu.csv")
#random sampling
set.seed(13223)
country_samp <- sample(country_data$Country, 50)
indx <- c()
country <- c()
count <- 1
#immigrated and remaining population
rem_pop <- c()
imm_pop <- c()
for (i in 1:length(country_samp)){
if (!is.null(which(econ_ind$Country.Name == country_samp[i]))){
vals <- which(econ_ind$Country.Name == country_samp[i])
r_pop <- which(country_data$Country == country_samp[i])
if(length(vals)>0){
indx[count] <- which(econ_ind$Country.Name == country_samp[i])
country[count] <- country_samp[i]
rem_pop[count] <- country_data$Remaining.population[r_pop]
imm_pop[count] <- country_data$Emmigrated.population[r_pop]
count <- count+1
}
}
}
growth_rate <- econ_ind$GDP.growth[indx]
inflation <- econ_ind$Inflation[indx]
unemp <- econ_ind$unemployment.rate[indx]
crime <- econ_ind$homicides[indx]
popn <- data.frame(country=country,
immigrated_pop=imm_pop,
remaining_pop=rem_pop,
gdp_growth_rate=growth_rate,
inflation=inflation,
unemployment=unemp,
crime_rate=crime)
popn
write.csv(popn,"C:/Users/Dell/Desktop/HW/GLM/Project/population.csv", row.names = FALSE)
length(a)
a
a <- c(-0.36651232547364987, -2.185091452457346, 0.05564063627744492,
0.4210367460851172, -2.264468147606768, -2.100658371644795,
-1.771307631743704, 1.6198927508496581, 2.304864739715234,
-2.6063265969221656, -0.3340723754449651,
-0.03491417369849511, 2.6947232118889044,
-0.6815914159518397, 1.6164405950197094,
-2.5273521405312795, 0.9049211231280294,
0.8975100447525935, -1.967289404666256, 2.084399206343389, 1.8780610920165157,
-0.47998252597171015, 1.748870258160804, -1.1390636775040563, 1.1840499918199316,
2.3849414807115203, -0.1842706987285631, -2.272539049985611, 1.1319120369012903,
-0.011823925338928613, -0.36651232547365314, -2.185091452457345, 0.05564063627743905,
0.4210367460851152, -2.2644681476067645, -2.100658371644795, -1.7713076317437053,
1.6198927508496581, 2.304864739715235, -2.606326596922166, -0.33407237544496504, -0.03491417369849564, 2.694723211888905, -0.6815914159518397, 1.6164405950197092, -2.5273521405312804, 0.9049211231280294, 0.8975100447525934, -1.967289404666256, 2.084399206343389, 1.8780610920165162, -0.47998252597171004, 1.748870258160804, -1.1390636775040568, 1.1840499918199316, 2.3849414807115203, -0.18427069872856258, -2.2725390499856104, 1.1319120369012903, -0.011823925338928266, -0.36651232547365314, -2.185091452457345, 0.05564063627743905, 0.4210367460851152, -2.2644681476067645, -2.100658371644795, -1.771307631743705, 1.6198927508496581, 2.304864739715234, -2.606326596922166, -0.3340723754449651, -0.03491417369849511, 2.694723211888905, -0.6815914159518397, 1.6164405950197092, -2.527352140531279, 0.9049211231280301, 0.8975100447525924, -1.9672894046662555, 2.084399206343389, 1.8780610920165162, -0.47998252597171004, 1.748870258160804, -1.1390636775040568, 1.1840499918199316, 2.3849414807115203, -0.1842706987285631, -2.272539049985611, 1.1319120369012903, -0.011823925338928613, -0.36651232547365314, -2.185091452457345, 0.05564063627743905, 0.42103674608511504, -2.264468147606764, -2.1006583716447955, -1.771307631743705, 1.6198927508496581, 2.304864739715234, -2.606326596922166, -0.3340723754449651, -0.03491417369849511, 2.694723211888905, -0.6815914159518397, 1.6164405950197092, -2.5273521405312804, 0.9049211231280294, 0.8975100447525934, -1.967289404666256, 2.084399206343389, 1.8780610920165162, -0.47998252597171004, 1.7488702581608035, -1.139063677504056, 1.1840499918199316, 2.3849414807115203, -0.1842706987285631, -2.272539049985611, 1.1319120369012903, -0.011823925338928613, -0.36651232547365314, -2.185091452457345, 0.05564063627743905, 0.4210367460851152, -2.2644681476067645, -2.100658371644795, -1.771307631743705, 1.6198927508496581, 2.304864739715234, -2.606326596922166, -0.3340723754449649, -0.03491417369849608, 2.694723211888905, -0.6815914159518397, 1.6164405950197092, -2.5273521405312804, 0.9049211231280294, 0.8975100447525934, -1.967289404666256, 2.084399206343389, 1.8780610920165162, -0.47998252597171004, 1.748870258160804, -1.1390636775040568, 1.1840499918199316, 2.3849414807115203, -0.1842706987285631, -2.2725390499856104, 1.1319120369012903, -0.011823925338928494)
a
length(a)
b <- c(-0.2599220522416415, -0.20267925934926148, -2.0789769679725816, -0.36755939766122925, -2.0173458040423444, 0.8472948477743932, 1.2715728484335498, 1.2182829884340967, -0.9796855632883164, -2.245557652384278, 1.6113320188200575, -0.943624405025316, -2.3470343298990346, 0.16363991100184225, 0.676300520047713, -0.35825900366490543, 2.1850839053202527, 0.15338227441460453, 2.4298291058165207, -2.3419767372679905, 1.3650618641731826, 0.24125018578890078, 1.523042755632055, -2.6744441439902413, -0.8912426037108853, -1.322780322518249, 1.7341380030948381, 0.28094192480140795, 2.769362233095112, 0.5605728563677549, -0.2599220522416426, -0.20267925934926084, -2.078976967972585, -0.36755939766122747, -2.0173458040423466, 0.8472948477743958, 1.271572848433552, 1.218282988434097, -0.9796855632883156, -2.2455576523842775,
1.6113320188200577, -0.9436244050253157, -2.3470343298990346, 0.16363991100184222, 0.6763005200477129, -0.35825900366490554, 2.1850839053202527, 0.15338227441460453, 2.4298291058165202, -2.3419767372679905, 1.365061864173183, 0.24125018578890076, 1.523042755632055, -2.6744441439902404, -0.8912426037108852, -1.3227803225182493, 1.7341380030948381, 0.28094192480140806, 2.7693622330951126, 0.5605728563677543, -0.25992205224164255, -0.20267925934926084, -2.078976967972585, -0.36755939766122747, -2.0173458040423466, 0.8472948477743958, 1.271572848433552, 1.2182829884340967, -0.979685563288316, -2.245557652384278, 1.6113320188200575, -0.9436244050253163, -2.347034329899034, 0.16363991100184225, 0.6763005200477129, -0.3582590036649055, 2.185083905320252, 0.15338227441460506, 2.4298291058165202, -2.3419767372679905, 1.365061864173183, 0.24125018578890076, 1.523042755632055, -2.6744441439902404, -0.8912426037108852, -1.3227803225182493, 1.7341380030948381, 0.28094192480140795, 2.769362233095112, 0.5605728563677549, -0.2599220522416426, -0.20267925934926084, -2.078976967972585, -0.3675593976612273, -2.0173458040423475, 0.8472948477743956, 1.271572848433552, 1.2182829884340967, -0.979685563288316, -2.245557652384278, 1.6113320188200575, -0.9436244050253163, -2.347034329899034, 0.16363991100184225, 0.6763005200477129, -0.35825900366490554, 2.1850839053202527,
0.15338227441460453, 2.4298291058165202, -2.3419767372679905, 1.365061864173183, 0.24125018578890076, 1.5230427556320543, -2.6744441439902404, -0.8912426037108853, -1.3227803225182493, 1.7341380030948381, 0.28094192480140795, 2.769362233095112, 0.5605728563677549, -0.2599220522416426, -0.20267925934926084, -2.078976967972585, -0.36755939766122747, -2.0173458040423466, 0.8472948477743958, 1.271572848433552, 1.2182829884340967, -0.979685563288316, -2.245557652384278, 1.6113320188200577, -0.943624405025316, -2.3470343298990346, 0.16363991100184225, 0.6763005200477129, -0.35825900366490554, 2.1850839053202527, 0.15338227441460453, 2.4298291058165202, -2.3419767372679905, 1.365061864173183, 0.24125018578890076, 1.523042755632055, -2.6744441439902404, -0.8912426037108852, -1.3227803225182493, 1.7341380030948381, 0.2809419248014081, 2.769362233095112, 0.5605728563677544)
length(b)
plot(a,b)
plot(a,b)
points(0.36651232547364987, -0.2599220522416415, col="red")
plot(a,b)
points(-0.36651232547364987, -0.2599220522416415, col="red")
plot(a,b)
points(-0.36651232547364987, -0.2599220522416415, col="red")
pdata <-  read.csv("pop_new.csv")
sub_data <- subset(pdata, select = -c(country))
getwd()
setwd
setwd("C:\\Users\\Dell\\Desktop\\HW\\GLM\\Project")
pdata <-  read.csv("pop_new.csv")
sub_data <- subset(pdata, select = -c(country))
fit1 <- glm(cbind(sub_data$immigrated_pop,sub_data$emigrated_pop)~
gdp_growth_rate+inflation+Stability*unemployment+Stability*crime_rate+
Stability*Poverty + Stability*Terrorism, data = sub_data, family = binomial())
fit3 <- glm(cbind(sub_data$immigrated_pop,sub_data$emigrated_pop)~
gdp_growth_rate+inflation+unemployment+crime_rate+
Poverty + Terrorism, data = sub_data, family = binomial())
fit4 <- glm(cbind(sub_data$immigrated_pop,sub_data$emigrated_pop)~
gdp_growth_rate+inflation+unemployment+crime_rate+
Poverty + Terrorism, data = sub_data, family = quasibinomial())
res1 <- resid(fit1, type="deviance")
res2 <- resid(fit2, type="deviance")
qqline(res1)
qqnorm(res1)
qqline(res1)
plot(res1,  main = "Deviance Residuals", xlab = "Index", ylab="Residuals")
qqnorm(res2)
qqline(res2)
res2 <- resid(fit2, type="deviance")
fit3 <- glm(cbind(sub_data$immigrated_pop,sub_data$emigrated_pop)~
gdp_growth_rate+inflation+unemployment+crime_rate+
Poverty + Terrorism, data = sub_data, family = binomial())
fit4 <- glm(cbind(sub_data$immigrated_pop,sub_data$emigrated_pop)~
gdp_growth_rate+inflation+unemployment+crime_rate+
Poverty + Terrorism, data = sub_data, family = quasibinomial())
res1 <- resid(fit1, type="deviance")
res2 <- resid(fit3, type="deviance")
qqnorm(res2)
qqline(res2)
#plot(rsd)
#qqnorm(rsd)
#qqline(rsd)
summary(fit1)
summary(fit2)
fit2 <- glm(cbind(sub_data$immigrated_pop,sub_data$emigrated_pop)~
gdp_growth_rate+inflation+Stability*unemployment+Stability*crime_rate+
Stability*Poverty + Stability*Terrorism, data = sub_data,family=quasibinomial())
summary(fit4)
knitr::opts_chunk$set(echo = TRUE)
pdata <-  read.csv("pop_new.csv")
sub_data <- subset(pdata, select = -c(country))
fit1 <- glm(cbind(sub_data$immigrated_pop,sub_data$emigrated_pop)~
gdp_growth_rate+inflation+Stability*unemployment+Stability*crime_rate+
Stability*Poverty + Stability*Terrorism, data = sub_data, family = binomial())
fit0 <- glm(cbind(sub_data$immigrated_pop,sub_data$emigrated_pop)~., data = sub_data, family = binomial())
summary(fit0)
summary(fit1)
273224416-7668162
knitr::opts_chunk$set(echo = TRUE)
pdata <-  read.csv("population.csv")
sub_data <- subset(pdata, select = -c(country))
fit1 <- glm(cbind(sub_data$immigrated_pop,sub_data$remaining_pop)~
gdp_growth_rate+inflation+Stability*unemployment+Stability*crime_rate+
Stability*Poverty + Stability*Terrorism, data = sub_data, family = binomial())
#plot(rsd)
#qqnorm(rsd)
#qqline(rsd)
summary(fit1)
#plot(rsd)
#qqnorm(rsd)
#qqline(rsd)
summary(fit1)$coeff
res1 <- resid(fit1, type="deviance")
qqnorm(res1)
qqline(res1)
fit1 <- glm(cbind(sub_data$immigrated_pop,sub_data$remaining_pop)~
gdp_growth_rate+inflation+Stability*unemployment+Stability*crime_rate+
Stability*Poverty + Stability*Terrorism, data = sub_data, family = binomial())
res1 <- resid(fit1, type="deviance")
qqnorm(res1)
qqline(res1)
qqnorm(res1)
qqline(res1)
plot(res1,  main = "Deviance Residuals", xlab = "Index", ylab="Residuals")
qqnorm(res1)
qqline(res1)
summary(fit1)
fit5 <- glm(cbind(sub_data$immigrated_pop,sub_data$remaining_pop)~
Stability*crime_rate+Terrorism, data = sub_data,family=quasibinomial())
summary(fit5)
summary(fit5)$coeff
anova(fit5, fit2, test = "F")
anova(fit5, fit2, test = "F")
fit2 <- glm(cbind(sub_data$immigrated_pop,sub_data$remaining_pop)~
gdp_growth_rate+inflation+Stability*unemployment+Stability*crime_rate+
Stability*Poverty + Stability*Terrorism, data = sub_data,family=quasibinomial())
fit2 <- glm(cbind(sub_data$immigrated_pop,sub_data$remaining_pop)~
gdp_growth_rate+inflation+Stability*unemployment+Stability*crime_rate+
Stability*Poverty + Stability*Terrorism, data = sub_data,family=quasibinomial())
fit5 <- glm(cbind(sub_data$immigrated_pop,sub_data$remaining_pop)~
Stability*crime_rate+Terrorism, data = sub_data,family=quasibinomial())
anova(fit5, fit2, test = "F")
res5 = resid(fit5, type="deviance")
qqnorm(res5)
qqline(res5)
plot(res5,  main = "Deviance Residuals", xlab = "Index", ylab="Residuals")
qqnorm(res5)
qqline(res5)
plot(res5,  main = "Deviance Residuals", xlab = "Index", ylab="Residuals")
